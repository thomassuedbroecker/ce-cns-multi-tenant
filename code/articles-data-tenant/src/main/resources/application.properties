# Default Tenant Configuration
# quarkus.oidc.auth-server-url=http://localhost:8282/auth/realms/tenantA
# quarkus.oidc.client-id=backend-service
# quarkus.oidc.application-type=web-app
# quarkus.oidc.credentials.secret=secret

# Tenant A Configuration
# quarkus.oidc.tenant-a.auth-server-url=http://localhost:8282/auth/realms/tenantB
# quarkus.oidc.tenant-a.client-id=backend-service
# quarkus.oidc.tenant-a.application-type=web-app
# quarkus.oidc.tenant-a.credentials.secret=secret

# *************
# Code Engine
# quarkus.http.port=8080

# *************
# When running locally, uncomment the next line, to use the port 8084
quarkus.http.port=8084
quarkus.http.cors=true

resteasy.role.based.security=true

# Tenant
cns.tenant_A=${CNS_TENANT_A:tendantA}
cns.tenant_B=${CNS_TENANT_B:tendantB}

# Cloudant data access
cloudant.url=${CLOUDANT_URL:YOUR_URL}
cloudant.username=${CLOUDANT_USERNAME:YOUR_KEY}
cloudant.password=${CLOUDANT_PASSWORD:YOUR_PASSWORD}
cloudant.database=${CLOUDANT_DATABASE:articles}

# Articles database access
articlesDB.design=${ARTICELS_DB_DESIGN:_d_i_articles}
articlesDB.index=${ARTICELS_DB_INDEX:_idx_articles}
articlesDB.queryA=${ARTICELS_DB_QUERY_A:customer:blog.d*}
articlesDB.queryB=${ARTICELS_DB_QUERY_B:customer:blog.c*}

# HTTP Security Configuration
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated
#quarkus.log.level=DEBUG
